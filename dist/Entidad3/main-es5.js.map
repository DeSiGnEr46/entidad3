{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/componentes/add-transaction/add-transaction.component.html","src/app/componentes/editar-transaccion/editar-transaccion.component.html","src/app/componentes/editar-usuario/editar-usuario.component.html","src/app/componentes/eliminar-usuario/eliminar-usuario.component.html","src/app/componentes/home/home.component.html","src/app/componentes/log/login/login.component.html","src/app/componentes/log/signup/signup.component.html","src/app/componentes/panel-administracion/panel-administracion.component.html","src/app/componentes/perfil/perfil.component.html","src/app/componentes/shared/footer/footer.component.html","src/app/componentes/shared/navbar/navbar.component.html","src/app/componentes/trans-historial/trans-historial.component.html","src/app/componentes/world-state/world-state.component.html","node_modules/tslib/tslib.es6.js","src/app/app-routing.module.ts","src/app/app.component.scss","src/app/app.component.ts","src/app/app.module.ts","src/app/app.routes.ts","src/app/componentes/add-transaction/add-transaction.component.scss","src/app/componentes/add-transaction/add-transaction.component.ts","src/app/componentes/editar-transaccion/editar-transaccion.component.scss","src/app/componentes/editar-transaccion/editar-transaccion.component.ts","src/app/componentes/editar-usuario/editar-usuario.component.scss","src/app/componentes/editar-usuario/editar-usuario.component.ts","src/app/componentes/eliminar-usuario/eliminar-usuario.component.scss","src/app/componentes/eliminar-usuario/eliminar-usuario.component.ts","src/app/componentes/home/home.component.scss","src/app/componentes/home/home.component.ts","src/app/componentes/log/login/login.component.scss","src/app/componentes/log/login/login.component.ts","src/app/componentes/log/signup/signup.component.scss","src/app/componentes/log/signup/signup.component.ts","src/app/componentes/panel-administracion/panel-administracion.component.scss","src/app/componentes/panel-administracion/panel-administracion.component.ts","src/app/componentes/perfil/perfil.component.scss","src/app/componentes/perfil/perfil.component.ts","src/app/componentes/shared/footer/footer.component.scss","src/app/componentes/shared/footer/footer.component.ts","src/app/componentes/shared/navbar/navbar.component.scss","src/app/componentes/shared/navbar/navbar.component.ts","src/app/componentes/trans-historial/trans-historial.component.scss","src/app/componentes/trans-historial/trans-historial.component.ts","src/app/componentes/world-state/world-state.component.scss","src/app/componentes/world-state/world-state.component.ts","src/app/servicios/admin-guard.service.ts","src/app/servicios/auth-guard.service.ts","src/app/servicios/blockchain.service.ts","src/app/servicios/log.service.ts","src/app/servicios/usuarios.service.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\"","export default \"<div class=\\\"container\\\" style=\\\"padding-top: 10px;\\\">\\n\\n    <h5 class=\\\"text-center\\\" style=\\\"color:red;\\\">¡ Atención, la nueva clave puede no aparecer. Recargar hasta que\\n        aparezca !</h5>\\n    <div class=\\\"text-center\\\">\\n        <button mdbBtn (click)=\\\"reload()\\\" class=\\\"btn green accent-2\\\">Obtener Clave</button>\\n    </div>\\n    <hr>\\n    <!-- Formulario de cambio de datos personales-->\\n    <form [formGroup]=\\\"addTrans\\\" (ngSubmit)=\\\"crear()\\\">\\n        <div class=\\\"modal-body\\\">\\n            <p class=\\\"h2-responsive text-center\\\">Crear envío</p>\\n            <hr>\\n\\n            <!-- Formulario de cambio de nombre y/o correo -->\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-lock prefix grey-text\\\"></i>\\n                <div class=\\\"md-form\\\" style=\\\"padding-left: 30px;\\\">\\n                    <select class=\\\"form-control\\\" id=\\\"selecchannel\\\" formControlName=\\\"channel\\\">\\n                        <option value=\\\"channelall\\\"> channelall </option>\\n                        <option value=\\\"channel13\\\"> channel13 </option>\\n                    </select>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-user prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"key\\\" placeholder=\\\"Key *\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"key\\\">\\n            </div>\\n            <div *ngIf=\\\"addTrans.controls['key'].errors?.required\\\" class=\\\"form-control-feedback\\\">\\n                Campo obligatorio.\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-align-left prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"producto\\\" placeholder=\\\"Producto\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"producto\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-align-left prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"modelo\\\" placeholder=\\\"Modelo\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"modelo\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-align-left prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"tipo\\\" placeholder=\\\"Tipo\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"tipo\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-calculator prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"dimensiones\\\" placeholder=\\\"Dimensiones\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"dimensiones\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-calendar prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"fecha_fab\\\" placeholder=\\\"Fecha Fabricación\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"fecha_fab\\\">\\n                <!-- Errores de validación -->\\n                <div *ngIf=\\\"addTrans.controls['fecha_fab'].errors?.pattern\\\" class=\\\"form-control-feedback\\\">\\n                    El formato de fecha no es correcto: DD-MM-YYYY\\n                </div>\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-list prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"materiales\\\" placeholder=\\\"Materiales\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"materiales\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-align-left prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"descripcion\\\" placeholder=\\\"Descripción\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"descripcion\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-calculator prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"cantidad\\\" placeholder=\\\"Cantidad\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"cantidad\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-calculator prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"precio_ud\\\" placeholder=\\\"Precio unidad\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"precio_ud\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-calculator prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"precio_tot\\\" placeholder=\\\"Precio total\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"precio_tot\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-user prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"origen\\\" placeholder=\\\"Origen\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"origen\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-user prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"dst\\\" placeholder=\\\"Destino *\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"dst\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-user prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"ordenante\\\" placeholder=\\\"Ordenante\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"ordenante\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-calendar prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"fecha_env\\\" placeholder=\\\"Fecha envio\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"fecha_env\\\">\\n                <!-- Errores de validación -->\\n                <div *ngIf=\\\"addTrans.controls['fecha_env'].errors?.pattern\\\" class=\\\"form-control-feedback\\\">\\n                    El formato de fecha no es correcto: DD-MM-YYYY\\n                </div>\\n            </div>\\n            <!-- Mensajes de confirmación/error -->\\n            <div class=\\\"green-text\\\" *ngIf=\\\"submitOk\\\">\\n                Los cambios se han guardado correctamente.\\n            </div>\\n            <div class=\\\"red-text\\\" *ngIf=\\\"!submitOk && submitOk != null\\\">\\n                Se ha producido un error. Inténtelo de nuevo.\\n            </div>\\n            \\n            <p>* Campos obligatorios</p>\\n            <div class=\\\"text-center mb-10\\\">\\n                <button [disabled]=\\\"!addTrans.valid\\\" class=\\\"btn btn-unique waves-light \\\" type=\\\"submit\\\"\\n                    mdbWavesEffect>Crear\\n                    <i class=\\\"fa fa-paper-plane-o ml-1\\\"></i>\\n                </button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\"","export default \"<div class=\\\"container\\\" style=\\\"padding-top: 10px;\\\">\\n\\n    <p class=\\\"h2-responsive text-center\\\">Modificar transacción</p>\\n    <hr>\\n\\n    <h5 class=\\\"text-center\\\" style=\\\"color:red;\\\">¡ Atención, la información puede no aparecer. Recargar hasta que aparezca\\n        !</h5>\\n    <div class=\\\"text-center\\\">\\n        <button mdbBtn (click)=\\\"reload()\\\" class=\\\"btn green accent-2\\\">Recargar</button>\\n    </div>\\n    <hr>\\n    <!-- Formulario de cambio de datos personales-->\\n    <form [formGroup]=\\\"editTrans\\\" (ngSubmit)=\\\"editar()\\\">\\n        <div class=\\\"modal-body\\\">\\n            <!-- Formulario de cambio de nombre y/o correo -->\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-user prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"channel\\\" placeholder=\\\"Channel\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"channel\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-user prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"key\\\" placeholder=\\\"Key\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"key\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-align-left prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"producto\\\" placeholder=\\\"Producto\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"producto\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-align-left prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"modelo\\\" placeholder=\\\"Modelo\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"modelo\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-align-left prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"tipo\\\" placeholder=\\\"Tipo\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"tipo\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-calculator prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"dimensiones\\\" placeholder=\\\"Dimensiones\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"dimensiones\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-calendar prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"fecha_fab\\\" placeholder=\\\"Fecha Fabricación\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"fecha_fab\\\">\\n                <!-- Errores de validación -->\\n                <div *ngIf=\\\"editTrans.controls['fecha_fab'].errors?.pattern\\\" class=\\\"form-control-feedback\\\">\\n                    El formato de fecha no es correcto: DD-MM-YYYY\\n                </div>\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-list prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"materiales\\\" placeholder=\\\"Materiales\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"materiales\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-align-left prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"descripcion\\\" placeholder=\\\"Descripción\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"descripcion\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-calculator prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"cantidad\\\" placeholder=\\\"Cantidad\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"cantidad\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-calculator prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"precio_ud\\\" placeholder=\\\"Precio unidad\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"precio_ud\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-calculator prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"precio_tot\\\" placeholder=\\\"Precio total\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"precio_tot\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-user prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"origen\\\" placeholder=\\\"Origen\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"origen\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-user prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"dst\\\" placeholder=\\\"Destino\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"dst\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-user prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"ordenante\\\" placeholder=\\\"Ordenante\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"ordenante\\\">\\n            </div>\\n\\n            <div class=\\\"md-form\\\">\\n                <i class=\\\"fa fa-calendar prefix grey-text\\\"></i>\\n                <input type=\\\"text\\\" id=\\\"fecha_env\\\" placeholder=\\\"Fecha envio\\\" class=\\\"form-control form-control-sm\\\"\\n                    formControlName=\\\"fecha_env\\\">\\n                <!-- Errores de validación -->\\n                <div *ngIf=\\\"editTrans.controls['fecha_env'].errors?.pattern\\\" class=\\\"form-control-feedback\\\">\\n                    El formato de fecha no es correcto: DD-MM-YYYY\\n                </div>\\n            </div>\\n            <!-- Mensajes de confirmación/error -->\\n            <div class=\\\"green-text\\\" *ngIf=\\\"submitOk\\\">\\n                Los cambios se han guardado correctamente.\\n            </div>\\n            <div class=\\\"red-text\\\" *ngIf=\\\"!submitOk && submitOk != null\\\">\\n                Se ha producido un error. Inténtelo de nuevo.\\n            </div>\\n\\n            <div class=\\\"text-center mb-10\\\">\\n                <button [disabled]=\\\"!editTrans.valid\\\" class=\\\"btn btn-unique waves-light \\\" type=\\\"submit\\\"\\n                    mdbWavesEffect>Modificar\\n                    <i class=\\\"fa fa-paper-plane-o ml-1\\\"></i>\\n                </button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\"","export default \"<div class=\\\"container\\\" style=\\\"padding-top: 10px;\\\">\\n\\n    <!-- Formulario de cambio de datos personales-->\\n    <form [formGroup]=\\\"cambioDatos\\\" (ngSubmit)=\\\"editarInfo()\\\">\\n      <div class=\\\"modal-body\\\">\\n        <p class=\\\"h2-responsive text-center\\\">Modificar información del usuario</p>\\n        <hr>\\n  \\n        <!-- Formulario de cambio de nombre y/o correo -->\\n        <div class=\\\"md-form\\\">\\n          <i class=\\\"fa fa-user prefix grey-text\\\"></i>\\n          <input type=\\\"text\\\" id=\\\"nombre\\\" class=\\\"form-control form-control-sm\\\" formControlName=\\\"nombre\\\">\\n          <!-- Errores de validación -->\\n          <div *ngIf=\\\"cambioDatos.controls['nombre'].errors?.minlength\\\" class=\\\"form-control-feedback\\\">\\n            Longitud mínima necesaria {{ cambioDatos.controls['nombre'].errors.minlength.requiredLength }}.\\n          </div>\\n          <div *ngIf=\\\"cambioDatos.controls['nombre'].errors?.novacio && !cambioDatos.controls['nombre'].pristine\\\" class=\\\"form-control-feedback\\\">\\n            El campo no puede estar vacío.\\n          </div>\\n        </div>\\n  \\n        <div class=\\\"md-form\\\">\\n          <i class=\\\"fa fa-envelope prefix grey-text\\\"></i>\\n          <input type=\\\"email\\\" id=\\\"correo\\\" class=\\\"form-control form-control-sm\\\" formControlName=\\\"correo\\\">\\n          <!-- Errores de validación -->\\n          <div *ngIf=\\\"cambioDatos.controls['correo'].errors?.novacio && !cambioDatos.controls['correo'].pristine\\\" class=\\\"form-control-feedback\\\">\\n            El correo no puede estar vacío.\\n          </div>\\n          <div *ngIf=\\\"cambioDatos.controls['correo'].errors?.pattern\\\" class=\\\"form-control-feedback\\\">\\n            El formato no es correcto.\\n          </div>\\n        </div>\\n  \\n        <!-- Desplegable para cambiar permisos de usuario -->\\n        <div class=\\\"md-form\\\">\\n          <i class=\\\"fa fa-lock prefix grey-text\\\"></i>\\n          <div class=\\\"md-form\\\" style=\\\"padding-left: 30px;\\\">\\n            <select class=\\\"form-control\\\" id=\\\"selectp\\\" formControlName=\\\"permisos\\\">\\n              <option [selected]=\\\"usuario.permisos == 'admin'\\\" value=\\\"admin\\\"> Admin </option>\\n              <option [selected]=\\\"usuario.permisos != 'admin'\\\" value=\\\"usuario\\\"> Usuario </option>\\n            </select>\\n          </div>\\n        </div>\\n        <!-- Mensajes de confirmación/error -->\\n        <div class=\\\"green-text\\\" *ngIf=\\\"editok\\\">\\n          Los cambios se han guardado correctamente.\\n        </div>\\n        <div class=\\\"red-text\\\" *ngIf=\\\"!editok && editok != null\\\">\\n          Se ha producido un error en el servidor.\\n        </div>\\n  \\n        <div class=\\\"text-center mb-10\\\">\\n          <button [disabled]=\\\"!cambioDatos\\\" class=\\\"btn btn-unique waves-light rounded aqua-grad\\\" type=\\\"submit\\\" mdbWavesEffect>Modificar\\n            <i class=\\\"fa fa-paper-plane-o ml-1\\\"></i>\\n          </button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  \\n  <!-- Formulario de cambio de contraseña-->\\n  <div class=\\\"container\\\" style=\\\"padding-top: 40px;\\\">\\n    <form [formGroup]=\\\"cambioPass\\\" (ngSubmit)=\\\"cambiarPassword()\\\">\\n      <div class=\\\"modal-body\\\">\\n        <p class=\\\"h2-responsive text-center\\\">Cambiar contraseña</p>\\n        <hr>\\n  \\n        <div class=\\\"md-form\\\">\\n          <i class=\\\"fa fa-lock prefix grey-text\\\"></i>\\n          <input type=\\\"password\\\" id=\\\"nuevaPass\\\" formControlName=\\\"nuevaPass\\\" placeholder=\\\"Nueva contraseña\\\" class=\\\"form-control form-control-sm\\\">\\n          <!-- Errores de validación -->\\n          <div *ngIf=\\\"cambioPass.controls['nuevaPass'].errors?.pattern\\\" class=\\\"form-control-feedback\\\">\\n            La contraseña debe contener al menos una minúscula, una mayúscula, un número, un carácter especial y una longitud de al menos\\n            5 caracteres.\\n          </div>\\n          <div *ngIf=\\\"cambioPass.controls['nuevaPass'].errors?.novacio && !cambioPass.controls['nuevaPass'].pristine\\\" class=\\\"form-control-feedback\\\">\\n            El campo no puede estar vacío.\\n          </div>\\n        </div>\\n  \\n        <div class=\\\"md-form\\\">\\n          <i class=\\\"fa fa-lock prefix grey-text\\\"></i>\\n          <input type=\\\"password\\\" id=\\\"rePass\\\" formControlName=\\\"rePass\\\" placeholder=\\\"Repita la contraseña\\\" class=\\\"form-control form-control-sm\\\">\\n          <!-- Errores de validación -->\\n          <div *ngIf=\\\"cambioPass.controls['rePass'].errors?.coinciden && !cambioPass.controls['rePass'].pristine\\\" class=\\\"form-control-feedback\\\">\\n            Las contraseñas no coinciden.\\n          </div>\\n          <div *ngIf=\\\"cambioPass.controls['rePass'].errors?.novacio && !cambioPass.controls['rePass'].pristine\\\" class=\\\"form-control-feedback\\\">\\n            El campo no puede estar vacío.\\n          </div>\\n        </div>\\n        <!-- Mensajes de confirmación/error -->\\n        <div class=\\\"green-text\\\" *ngIf=\\\"passok\\\">\\n          Los cambios se han guardado correctamente.\\n        </div>\\n        <div class=\\\"red-text\\\" *ngIf=\\\"!passok && passok != null\\\">\\n          Se ha producido un error en el servidor.\\n        </div>\\n  \\n        <div class=\\\"text-center\\\">\\n          <button [disabled]=\\\"!cambioPass.valid\\\" class=\\\"btn btn-unique waves-light rounded aqua-grad\\\" mdbWavesEffect>Cambiar\\n            <i class=\\\"fa fa-paper-plane-o ml-1\\\"></i>\\n          </button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\"","export default \"<div class=\\\"container pt-5\\\">\\n    <mdb-card>\\n      <mdb-card-header class=\\\"warning-color-dark white-text text-center\\\">\\n        ELIMINAR USUARIO\\n      </mdb-card-header>\\n      <mdb-card-body>\\n        <div class=\\\"text-center\\\">\\n          <mdb-card-title>¿Está seguro de que desea eliminar al usuario?</mdb-card-title>\\n          <mdb-card-text>Está a punto de borrar al usuario de forma permanente.</mdb-card-text>\\n          <a mdbBtn color=\\\"secondary\\\" class=\\\"waves-light mt-2 rounded success-grad\\\" [routerLink]=\\\"['/panelAdmin']\\\" mdbWavesEffect>Volver</a>\\n          <a mdbBtn (click)=\\\"eliminar()\\\" mdbBtn color=\\\"danger\\\" class=\\\"waves-light mt-2 rounded danger-grad\\\" mdbWavesEffect>Eliminar</a>\\n        </div>\\n      </mdb-card-body>\\n    </mdb-card>\\n  </div>\"","export default \"<div class=\\\"jumbotron card card-image\\\" style=\\\"background-image: url(https://mdbootstrap.com/img/Photos/Others/gradient1.jpg);\\\">\\n    <div class=\\\"text-white text-center py-5 px-4\\\">\\n      <div>\\n        <h2 class=\\\"card-title h1-responsive pt-3 mb-5 font-bold\\\" *ngIf=\\\"!sesionActiva()\\\"><strong>Bienvenido a la web de la Entidad3</strong></h2>\\n        <h2 class=\\\"card-title h1-responsive pt-3 mb-5 font-bold\\\" *ngIf=\\\"sesionActiva()\\\"><strong>Bienvenido {{Nombre}}</strong></h2>\\n        <p class=\\\"mx-5 mb-5\\\">En esta empresa se distribuyen productos al público y a otras empresas.\\n        </p>\\n        <a class=\\\"btn btn-light\\\" *ngIf=\\\"!sesionActiva()\\\" [routerLink]=\\\"['/login']\\\"> Inicia Sesión!</a>\\n      </div>\\n    </div>\\n  </div>\"","export default \"<!--Modal: Login / Register Form-->\\n\\n<div class=\\\"modal-dialog cascading-modal mt-5\\\" role=\\\"document\\\">\\n    <!--Content-->\\n    <div class=\\\"modal-content\\\">\\n\\n        <!--Modal cascading tabs-->\\n        <div class=\\\"modal-c-tabs\\\">\\n\\n            <!-- Nav tabs -->\\n            <ul class=\\\"nav nav-tabs tabs-2 \\\" role=\\\"tablist\\\">\\n                <li class=\\\"nav-item secondary-color accent-1\\\" routerLinkActive=\\\"active\\\">\\n                    <a class=\\\"nav-link white-text\\\" style=\\\"width: 249px;\\\" [routerLink]=\\\"['/login']\\\" role=\\\"tab\\\">\\n                        <i class=\\\"fa fa-user mr-1\\\"></i> Login</a>\\n                </li>\\n                <li class=\\\"nav-item warning-color-dark accent-3\\\" routerLinkActive=\\\"active\\\">\\n                    <a class=\\\"nav-link white-text\\\" data-toggle=\\\"tab\\\" style=\\\"width:249px;\\\" [routerLink]=\\\"['/signup']\\\" role=\\\"tab\\\">\\n                        <i class=\\\"fa fa-user-plus mr-1\\\"></i> Registro</a>\\n                </li>\\n            </ul>\\n\\n\\n            <div class=\\\"tab-content\\\">\\n                <!--Panel 7-->\\n                <div class=\\\"tab-pane fade in show active\\\" id=\\\"panel7\\\" role=\\\"tabpanel\\\">\\n\\n                    <!--Formulario-->\\n                    <form [formGroup]=\\\"forma\\\" (ngSubmit)=\\\"logearse()\\\">\\n                        <div class=\\\"modal-body\\\">\\n\\n                            <div class=\\\"md-form form-sm mb-5\\\">\\n                                <i class=\\\"fa fa-envelope prefix\\\"></i>\\n                                <input type=\\\"email\\\" id=\\\"modalLRInput10\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Introduzca su email\\\" formControlName=\\\"email\\\">\\n                                <!-- Errores de validación-->\\n                                <div *ngIf=\\\"forma.controls['email'].errors?.novacio && !forma.controls['email'].pristine\\\" class=\\\"form-control-feedback\\\">\\n                                    El campo no puede estar vacío.\\n                                </div>\\n                                <div *ngIf=\\\"forma.controls['email'].errors?.pattern\\\" class=\\\"form-control-feedback\\\">\\n                                    El formato no es correcto.\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"md-form form-sm mb-4\\\">\\n                                <i class=\\\"fa fa-lock prefix\\\"></i>\\n                                <input type=\\\"password\\\" id=\\\"modalLRInput11\\\" class=\\\"form-control form-control-sm validate\\\" placeholder=\\\"Introduzca su contraseña\\\"\\n                                    formControlName=\\\"password\\\">\\n                            </div>\\n                            <!-- Errores de validación-->\\n                            <div *ngIf=\\\"forma.controls['password'].errors?.novacio && !forma.controls['password'].pristine\\\" class=\\\"form-control-feedback\\\">\\n                                El campo no puede estar vacío.\\n                            </div>\\n\\n                            <div class=\\\"text-danger form-control-feedback\\\" *ngIf=\\\"!correcto\\\"> El correo o la contraseña son incorrectos.</div>\\n                            <div class=\\\"text-center mt-2\\\">\\n                                <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" [disabled]=\\\"!forma.valid\\\">Log in\\n                                    <i class=\\\"fa fa-sign-in ml-1\\\"></i>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </form>\\n                    <!--Footer-->\\n                    <div class=\\\"modal-footer\\\">\\n                        <div class=\\\"options text-center text-md-right mt-1\\\">\\n                            <p>¿No tiene cuenta?\\n                                <a class=\\\"purple-text\\\" [routerLink]=\\\"['/signup']\\\">Regístrese</a>\\n                            </p>\\n                        </div>\\n                    </div>\\n                </div>\\n                <!--/.Panel 7-->\\n            </div>\\n        </div>\\n    </div>\\n    <!--/.Content-->\\n</div>\"","export default \"<!--Modal: Login / Register Form-->\\n<div class=\\\"modal-dialog cascading-modal regist-top\\\" role=\\\"document\\\">\\n    <!--Content-->\\n    <div class=\\\"modal-content\\\">\\n  \\n      <!--Modal cascading tabs-->\\n      <div class=\\\"modal-c-tabs\\\">\\n  \\n        <!-- Nav tabs -->\\n        <ul class=\\\"nav nav-tabs tabs-2 \\\" role=\\\"tablist\\\">\\n          <li class=\\\"nav-item secondary-color accent-1\\\" routerLinkActive=\\\"active\\\">\\n            <a class=\\\"nav-link white-text\\\" style=\\\"width: 249px;\\\" [routerLink]=\\\"['/login']\\\" role=\\\"tab\\\">\\n                <i class=\\\"fa fa-user mr-1\\\"></i> Login</a>\\n        </li>\\n        <li class=\\\"nav-item warning-color-dark accent-3\\\" routerLinkActive=\\\"active\\\">\\n            <a class=\\\"nav-link white-text\\\" data-toggle=\\\"tab\\\" style=\\\"width:249px;\\\" [routerLink]=\\\"['/signup']\\\" role=\\\"tab\\\">\\n                <i class=\\\"fa fa-user-plus mr-1\\\"></i> Registro</a>\\n        </li>\\n        </ul>\\n  \\n        <div class=\\\"tab-content\\\">\\n          <!--Panel 8-->\\n          <div class=\\\"tab-pane fade in show active\\\" id=\\\"panel8\\\" role=\\\"tabpanel\\\">\\n  \\n            <!--FORMULARIO -->\\n            <form [formGroup]=\\\"forma\\\" (ngSubmit)=\\\"registrar()\\\">\\n              <div class=\\\"modal-body\\\">\\n  \\n                <div class=\\\"md-form form-sm mb-5\\\">\\n                  <i class=\\\"fa fa-user mr-1 prefix\\\"></i>\\n                  <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Introduzca su nombre\\\" formControlName=\\\"nombre\\\">\\n                  <!-- Errores de validación -->\\n                  <div *ngIf=\\\"forma.controls['nombre'].errors?.minlength\\\" class=\\\"form-control-feedback\\\">\\n                    Longitud mínima necesaria {{ forma.controls['nombre'].errors.minlength.requiredLength }}.\\n                  </div>\\n                  <div *ngIf=\\\"forma.controls['nombre'].errors?.novacio && !forma.controls['nombre'].pristine\\\" class=\\\"form-control-feedback\\\">\\n                    El campo no puede estar vacío.\\n                  </div>\\n                </div>\\n  \\n                <div class=\\\"md-form form-sm mb-5\\\">\\n                  <i class=\\\"fa fa-envelope prefix\\\"></i>\\n                  <input type=\\\"email\\\" class=\\\"form-control form-control-sm\\\" id=\\\"email\\\" placeholder=\\\"Introduzca su email\\\" formControlName=\\\"email\\\">\\n                  <!-- Errores de validación -->\\n                  <div *ngIf=\\\"forma.controls['email'].errors?.pattern\\\" class=\\\"form-control-feedback\\\">\\n                    El formato no es correcto.\\n                  </div>\\n                  <div *ngIf=\\\"forma.controls['email'].errors?.novacio && !forma.controls['email'].pristine\\\" class=\\\"form-control-feedback\\\">\\n                    El campo no puede estar vacío.\\n                  </div>\\n                  <div *ngIf=\\\"forma.controls['email'].errors?.existeEmail && !forma.controls['email'].pristine\\\" class=\\\"form-control-feedback\\\">\\n                    Ya existe una cuenta con esta dirección de correo electrónico.\\n                  </div>\\n                </div>\\n  \\n                <div class=\\\"md-form form-sm mb-5\\\">\\n                  <i class=\\\"fa fa-lock prefix\\\"></i>\\n                  <input type=\\\"password\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Contraseña\\\" formControlName=\\\"password\\\">\\n                  <!-- Errores de validación -->\\n                  <div *ngIf=\\\"forma.controls['password'].errors?.pattern\\\" class=\\\"form-control-feedback\\\">\\n                    La contraseña debe contener al menos una minúscula, una mayúscula, un número, un carácter especial y una longitud de al menos 5 caracteres.\\n                  </div>\\n                  <div *ngIf=\\\"forma.controls['password'].errors?.novacio && !forma.controls['password'].pristine\\\" class=\\\"form-control-feedback\\\">\\n                    El campo no puede estar vacío.\\n                  </div>\\n                </div>\\n  \\n                <div class=\\\"md-form form-sm mb-4\\\">\\n                  <i class=\\\"fa fa-lock prefix\\\"></i>\\n                  <input type=\\\"password\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Repita la contraseña\\\" formControlName=\\\"repassReg\\\">\\n                  <!-- Errores de validación -->\\n                  <div *ngIf=\\\"forma.controls['repassReg'].errors?.nocoindicen && !forma.controls['repassReg'].pristine\\\" class=\\\"form-control-feedback\\\">\\n                    Las contraseñas no coinciden.\\n                  </div>\\n                  <div *ngIf=\\\"forma.controls['repassReg'].errors?.novacio && !forma.controls['repassReg'].pristine\\\" class=\\\"form-control-feedback\\\">\\n                    El campo no puede estar vacío.\\n                  </div>\\n                </div>\\n  \\n                <div class=\\\"text-center form-sm mt-2\\\">\\n                  <div class=\\\"form-control-feedback\\\">\\n                    * Todos los campos son obligatorios.\\n                  </div>\\n                  <button class=\\\"btn btn-success\\\" type=\\\"submit\\\" [disabled]=\\\"!forma.valid\\\">Registrarse\\n                    <i class=\\\"fa fa-sign-in ml-1\\\"></i>\\n                  </button>\\n                </div>\\n  \\n              </div>\\n            </form>\\n  \\n            <!--Footer-->\\n            <div class=\\\"modal-footer\\\">\\n              <div class=\\\"options text-right\\\">\\n                <p class=\\\"pt-1\\\">¿Ya tiene cuenta?\\n                  <a [routerLink]=\\\"['/login']\\\" class=\\\"purple-text\\\">Inicie Sesión</a>\\n                </p>\\n              </div>\\n            </div>\\n          </div>\\n          <!--/.Panel 8-->\\n        </div>\\n  \\n      </div>\\n    </div>\\n    <!--/.Content-->\\n  </div>\"","export default \"<div class=\\\"container pt-3\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n            <!-- Grid row -->\\n            <div class=\\\"row\\\">\\n\\n                <!-- Grid column -->\\n                <div class=\\\"col-md-12\\\">\\n\\n                    <div class=\\\"md-form\\\">\\n                        <input type=\\\"search\\\" (keyup)=\\\"buscar()\\\" [(ngModel)]=\\\"searchText\\\" id=\\\"search\\\" class=\\\"form-control\\\" [mdbValidate]=\\\"false\\\"\\n                            placeholder=\\\"Buscar usuario\\\">\\n                        <div class=\\\"text-center\\\">\\n                            <button mdbBtn (click)=\\\"todos()\\\" type=\\\"button\\\" class=\\\"waves-light btn-success\\\" mdbWavesEffect>Todos</button>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n                <!-- Grid column -->\\n\\n            </div>\\n            <!-- Grid row -->\\n\\n            <!--Table-->\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table table-striped\\\">\\n\\n                    <!--Table head-->\\n                    <thead>\\n                        <tr>\\n                            <th>ID</th>\\n                            <th>Nombre</th>\\n                            <th>Correo</th>\\n                            <th>Permisos</th>\\n                            <th>Acciones</th>\\n                        </tr>\\n                    </thead>\\n                    <!--Table head-->\\n\\n                    <!--Table body-->\\n                    <tbody>\\n                        <tr *ngFor=\\\"let user of usuarios \\\">\\n                            <!-- Aquí va el ngFor-->\\n                            <th scope=\\\"row\\\">{{ user.id }}</th>\\n                            <td>{{ user.nombre }}</td>\\n                            <td>{{ user.correo }}</td>\\n                            <td>{{ user.permisos }} </td>\\n                            <td>\\n                                <a class=\\\"btn waves-light btn-amber\\\" [routerLink]=\\\"['/editar', user.id]\\\" mdbWavesEffect>Editar</a>\\n                            </td>\\n                            <td>\\n                                <a class=\\\"btn waves-light btn-danger\\\" [routerLink]=\\\"['/eluser', user.id]\\\" mdbWavesEffect>Eliminar</a>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                    <!--Table body-->\\n                </table>\\n                <!--Table-->\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"container\\\" style=\\\"padding-top: 10px;\\\">\\n\\n    <!-- Formulario de cambio de datos personales-->\\n    <form [formGroup]=\\\"cambioDatos\\\" (ngSubmit)=\\\"editarInfo()\\\">\\n      <div class=\\\"modal-body\\\">\\n        <p class=\\\"h2-responsive text-center\\\">Modificar información personal</p>\\n        <hr>\\n  \\n        <div class=\\\"md-form\\\">\\n          <i class=\\\"fa fa-user prefix grey-text\\\"></i>\\n          <input type=\\\"text\\\" id=\\\"nombre\\\" class=\\\"form-control form-control-sm\\\" formControlName=\\\"nombre\\\">\\n          <!-- Errores de validación -->\\n          <div *ngIf=\\\"cambioDatos.controls['nombre'].errors?.minlength\\\" class=\\\"form-control-feedback\\\">\\n            Longitud mínima necesaria {{ cambioDatos.controls['nombre'].errors.minlength.requiredLength }}.\\n          </div>\\n          <div *ngIf=\\\"cambioDatos.controls['nombre'].errors?.novacio && !cambioDatos.controls['nombre'].pristine\\\" class=\\\"form-control-feedback\\\">\\n            El campo no puede estar vacío.\\n          </div>\\n        </div>\\n  \\n        <div class=\\\"md-form\\\">\\n          <i class=\\\"fa fa-envelope prefix grey-text\\\"></i>\\n          <input type=\\\"email\\\" id=\\\"correo\\\" class=\\\"form-control form-control-sm\\\" formControlName=\\\"correo\\\">\\n          <!-- Errores de validación -->\\n          <div *ngIf=\\\"cambioDatos.controls['correo'].errors?.novacio && !cambioDatos.controls['correo'].pristine\\\" class=\\\"form-control-feedback\\\">\\n            El correo no puede estar vacío.\\n          </div>\\n          <div *ngIf=\\\"cambioDatos.controls['correo'].errors?.pattern\\\" class=\\\"form-control-feedback\\\">\\n            El formato no es correcto.\\n          </div>\\n        </div>\\n        <!-- Mensajes de confirmación/error -->\\n        <div class=\\\"green-text\\\" *ngIf=\\\"editok\\\">\\n          Los cambios se han guardado correctamente.\\n        </div>\\n        <div class=\\\"red-text\\\" *ngIf=\\\"!editok && editok != null\\\">\\n          Se ha producido un error en el servidor.\\n        </div>\\n  \\n        <div class=\\\"text-center mb-10\\\">\\n          <button [disabled]=\\\"!cambioDatos.valid\\\" class=\\\"btn btn-success waves-lighe\\\" type=\\\"submit\\\">Modificar\\n            <i class=\\\"fa fa-paper-plane-o ml-1\\\"></i>\\n          </button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  \\n  <!-- Formulario de cambio de contraseña-->\\n  <div class=\\\"container\\\" style=\\\"padding-top: 40px;\\\">\\n    <form [formGroup]=\\\"cambioPass\\\" (ngSubmit)=\\\"cambiarPassword()\\\">\\n      <div class=\\\"modal-body\\\">\\n        <p class=\\\"h2-responsive text-center\\\">Cambiar contraseña</p>\\n        <hr>\\n  \\n        <div class=\\\"md-form\\\">\\n          <i class=\\\"fa fa-lock prefix grey-text\\\"></i>\\n          <input type=\\\"password\\\" id=\\\"nuevaPass\\\" formControlName=\\\"nuevaPass\\\" placeholder=\\\"Nueva contraseña\\\" class=\\\"form-control form-control-sm\\\">\\n          <!-- Errores de validación -->\\n          <div *ngIf=\\\"cambioPass.controls['nuevaPass'].errors?.pattern\\\" class=\\\"form-control-feedback\\\">\\n            La contraseña debe contener al menos una minúscula, una mayúscula, un número, un carácter especial y una longitud de al menos\\n            5 caracteres.\\n          </div>\\n          <div *ngIf=\\\"cambioPass.controls['nuevaPass'].errors?.novacio && !cambioPass.controls['nuevaPass'].pristine\\\" class=\\\"form-control-feedback\\\">\\n            El campo no puede estar vacío.\\n          </div>\\n        </div>\\n  \\n        <div class=\\\"md-form\\\">\\n          <i class=\\\"fa fa-lock prefix grey-text\\\"></i>\\n          <input type=\\\"password\\\" id=\\\"rePass\\\" formControlName=\\\"rePass\\\" placeholder=\\\"Repita la contraseña\\\" class=\\\"form-control form-control-sm\\\">\\n          <!-- Errores de validación -->\\n          <div *ngIf=\\\"cambioPass.controls['rePass'].errors?.coinciden && !cambioPass.controls['rePass'].pristine\\\" class=\\\"form-control-feedback\\\">\\n            Las contraseñas no coinciden.\\n          </div>\\n          <div *ngIf=\\\"cambioPass.controls['rePass'].errors?.novacio && !cambioPass.controls['rePass'].pristine\\\" class=\\\"form-control-feedback\\\">\\n            El campo no puede estar vacío.\\n          </div>\\n        </div>\\n        <!-- Mensajes de confirmación/error -->\\n        <div class=\\\"green-text\\\" *ngIf=\\\"passok\\\">\\n          Los cambios se han guardado correctamente.\\n        </div>\\n        <div class=\\\"red-text\\\" *ngIf=\\\"!passok && passok != null\\\">\\n          Se ha producido un error en el servidor.\\n        </div>\\n  \\n        <div class=\\\"text-center\\\">\\n          <button [disabled]=\\\"!cambioPass.valid\\\" class=\\\"btn btn-success waves-light\\\" mdbWavesEffect>Cambiar\\n            <i class=\\\"fa fa-paper-plane-o ml-1\\\"></i>\\n          </button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\"","export default \"<p>footer works!</p>\\n\"","export default \"<!--Navbar-->\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark indigo lighten-3\\\">\\n\\n    <!-- Navbar brand -->\\n    <logo>\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">Entidad 3</a>\\n    </logo>\\n  \\n    <!-- Collapsible content -->\\n    <links>\\n\\n        <!-- Links -->\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n            <li class=\\\"nav-item active\\\" routerLinkActive=\\\"active\\\">\\n                <a class=\\\"nav-link waves-light\\\" [routerLink]=\\\"['/home']\\\" mdbRippleRadius>Home</a>\\n            </li>\\n\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                <a *ngIf=\\\"sesionActiva()\\\" class=\\\"nav-link waves-light\\\" [routerLink]=\\\"['/world-state']\\\"\\n                    mdbRippleRadius>Estado</a>\\n            </li>\\n\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                <a *ngIf=\\\"sesionActiva() && esAdmin()\\\" class=\\\"nav-link waves-light\\\" [routerLink]=\\\"['/addtrans']\\\"\\n                    mdbRippleRadius>Nuevo Envío</a>\\n            </li>\\n\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                <a *ngIf=\\\"sesionActiva()\\\" class=\\\"nav-link waves-light\\\" [routerLink]=\\\"['/perfil']\\\"\\n                    mdbRippleRadius>Perfil</a>\\n            </li>\\n\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                <a *ngIf=\\\"sesionActiva() && esAdmin()\\\" class=\\\"nav-link waves-light\\\" [routerLink]=\\\"['/panelAdmin']\\\"\\n                    mdbRippleRadius>Panel de Administración</a>\\n            </li>\\n\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                <a *ngIf=\\\"!sesionActiva()\\\" class=\\\"nav-link waves-light\\\" [routerLink]=\\\"['/login']\\\"\\n                    mdbRippleRadius>Iniciar Sesión</a>\\n            </li>\\n\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                <a *ngIf=\\\"sesionActiva()\\\" class=\\\"nav-link waves-light\\\" (click)=\\\"desconectarse()\\\"\\n                    mdbRippleRadius>Desconectarse</a>\\n            </li>\\n        </ul>\\n        <!-- Links -->\\n    </links>\\n  \\n  </nav>\\n  <!--/.Navbar-->\"","export default \"<div class=\\\"container pt-3\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n            <h2> Historial de transacciones asociadas a la Tx {{ key }}</h2><hr>\\n            <h5 class=\\\"text-center\\\" style=\\\"color:red;\\\">¡ Atención, las transacciones pueden no cargar. Recargar hasta que aparezcan !</h5>\\n            <div class=\\\"text-center\\\">\\n                <button mdbBtn (click)=\\\"queryHist()\\\" class=\\\"btn green accent-2\\\">Recargar</button>\\n            </div><br>\\n            <!--Table-->\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table table-striped\\\">\\n\\n                    <!--Table head-->\\n                    <thead>\\n                        <tr>\\n                            <th>IsDelete</th>\\n                            <th>TimeStamp</th>\\n                            <th>TxID</th>\\n                            <th>Producto</th>\\n                            <th>Modelo</th>\\n                            <th>Tipo</th>\\n                            <th>Dimensiones</th>\\n                            <th>Fecha fabricación</th>\\n                            <th>Materiales</th>\\n                            <th>Descripción</th>\\n                            <th>Cantidad</th>\\n                            <th>Precio Ud</th>\\n                            <th>Precio Total</th>\\n                            <th>Origen</th>\\n                            <th>Destino</th>\\n                            <th>Ordenante</th>\\n                            <th>Fecha envio</th>\\n                        </tr>\\n                    </thead>\\n                    <!--Table head-->\\n\\n                    <!--Table body-->\\n                    <tbody>\\n                        <tr *ngFor=\\\"let transac of historial\\\">\\n                            <!-- Aquí va el ngFor-->\\n                            <td scope=\\\"row\\\">{{ transac.IsDelete }}</td>\\n                            <td>{{ transac.Timestamp }}</td>\\n                            <td>{{ transac.TxID }}</td>\\n                            <td>{{ transac.Value.producto }}</td>\\n                            <td>{{ transac.Value.modelo }}</td>\\n                            <td>{{ transac.Value.tipo }}</td>\\n                            <td>{{ transac.Value.dimensiones }}</td>\\n                            <td>{{ transac.Value.fechafab }} </td>\\n                            <td>{{ transac.Value.materiales }} </td>\\n                            <td>{{ transac.Value.descripcion}} </td>\\n                            <td>{{ transac.Value.cantidad }} </td>\\n                            <td>{{ transac.Value.precio_ud }} </td>\\n                            <td>{{ transac.Value.precio_tot }} </td>\\n                            <td>{{ transac.Value.origen }} </td>\\n                            <td>{{ transac.Value.dst }} </td>\\n                            <td>{{ transac.Value.Orderer }} </td>\\n                            <td>{{ transac.Value.fechaenv }} </td>\\n                        </tr>\\n                    </tbody>\\n                    <!--Table body-->\\n                </table>\\n                <!--Table-->\\n            </div>\\n            <div class=\\\"text-center\\\">\\n                <a mdbBtn [routerLink]=\\\"['/world-state']\\\" class=\\\"btn green accent-2\\\">Volver</a>\\n            </div><br>\\n        </div>\\n    </div>\\n</div>\\n\\n\"","export default \"<div class=\\\"container pt-3\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n            <h2> World Estate - ChannelAll</h2><hr>\\n            <h5 class=\\\"text-center\\\" style=\\\"color:red;\\\">¡ Atención, las transacciones pueden no cargar. Recargar hasta que aparezcan !</h5>\\n            <div class=\\\"text-center\\\">\\n                <button mdbBtn (click)=\\\"queryChannelAll()\\\" class=\\\"btn green accent-2\\\">Recargar</button>\\n            </div><br>\\n            <!--Table-->\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table table-striped\\\">\\n\\n                    <!--Table head-->\\n                    <thead>\\n                        <tr>\\n                            <th>Key</th>\\n                            <th>Producto</th>\\n                            <th>Modelo</th>\\n                            <th>Tipo</th>\\n                            <th>Dimensiones</th>\\n                            <th>Fecha fabricación</th>\\n                            <th>Materiales</th>\\n                            <th>Descripción</th>\\n                            <th>Cantidad</th>\\n                            <th>Precio Ud</th>\\n                            <th>Precio Total</th>\\n                            <th>Origen</th>\\n                            <th>Destino</th>\\n                            <th>Ordenante</th>\\n                            <th>Fecha envio</th>\\n                            <th>Acciones</th>\\n                        </tr>\\n                    </thead>\\n                    <!--Table head-->\\n\\n                    <!--Table body-->\\n                    <tbody>\\n                        <tr *ngFor=\\\"let estado of channelall\\\">\\n                            <!-- Aquí va el ngFor-->\\n                            <td scope=\\\"row\\\">{{ estado.Key }}</td>\\n                            <td>{{ estado.Record.producto }}</td>\\n                            <td>{{ estado.Record.modelo }}</td>\\n                            <td>{{ estado.Record.tipo }}</td>\\n                            <td>{{ estado.Record.dimensiones }}</td>\\n                            <td>{{ estado.Record.fechafab }} </td>\\n                            <td>{{ estado.Record.materiales }} </td>\\n                            <td>{{ estado.Record.descripcion}} </td>\\n                            <td>{{ estado.Record.cantidad }} </td>\\n                            <td>{{ estado.Record.precio_ud }} </td>\\n                            <td>{{ estado.Record.precio_tot }} </td>\\n                            <td>{{ estado.Record.origen }} </td>\\n                            <td>{{ estado.Record.dst }} </td>\\n                            <td>{{ estado.Record.Orderer }} </td>\\n                            <td>{{ estado.Record.fechaenv }} </td>\\n                            <td *ngIf=\\\"esAdmin()\\\">  \\n                                <a style=\\\"width:140px; height: 40px;\\\" class=\\\"btn btn-unique waves-light rounded purple-grad\\\" [routerLink]=\\\"['/edtrans', estado.Key, 'channelall']\\\" mdbWavesEffect>Editar</a>\\n                            </td>\\n                            <td>\\n                                <a style=\\\"width:140px; height: 40px;\\\" class=\\\"btn btn-unique waves-light rounded danger-grad\\\" [routerLink]=\\\"['/transhist', estado.Key, 'channelall']\\\" mdbWavesEffect>Historial</a>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                    <!--Table body-->\\n                </table>\\n                <!--Table-->\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"container pt-3\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n\\n            <h2> World Estate - Channel13</h2><hr>\\n            <h5 class=\\\"text-center\\\" style=\\\"color:red;\\\">¡ Atención, las transacciones pueden no cargar. Recargar hasta que aparezcan !</h5>\\n            <div class=\\\"text-center\\\">\\n                <button mdbBtn (click)=\\\"queryChannel13()\\\" class=\\\"btn green accent-2\\\">Recargar</button>\\n            </div><br>\\n            <!--Table-->\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table table-striped\\\">\\n\\n                    <!--Table head-->\\n                    <thead>\\n                        <tr>\\n                            <th>Key</th>\\n                            <th>Producto</th>\\n                            <th>Modelo</th>\\n                            <th>Tipo</th>\\n                            <th>Dimensiones</th>\\n                            <th>Fecha fabricación</th>\\n                            <th>Materiales</th>\\n                            <th>Descripción</th>\\n                            <th>Cantidad</th>\\n                            <th>Precio Ud</th>\\n                            <th>Precio Total</th>\\n                            <th>Origen</th>\\n                            <th>Destino</th>\\n                            <th>Ordenante</th>\\n                            <th>Fecha envio</th>\\n                            <th>Acciones</th>\\n                        </tr>\\n                    </thead>\\n                    <!--Table head-->\\n\\n                    <!--Table body-->\\n                    <tbody>\\n                        <tr *ngFor=\\\"let estado of channel13\\\">\\n                            <!-- Aquí va el ngFor-->\\n                            <td scope=\\\"row\\\">{{ estado.Key }}</td>\\n                            <td>{{ estado.Record.producto }}</td>\\n                            <td>{{ estado.Record.modelo }}</td>\\n                            <td>{{ estado.Record.tipo }}</td>\\n                            <td>{{ estado.Record.dimensiones }}</td>\\n                            <td>{{ estado.Record.fechafab }} </td>\\n                            <td>{{ estado.Record.materiales }} </td>\\n                            <td>{{ estado.Record.descripcion}} </td>\\n                            <td>{{ estado.Record.cantidad }} </td>\\n                            <td>{{ estado.Record.precio_ud }} </td>\\n                            <td>{{ estado.Record.precio_tot }} </td>\\n                            <td>{{ estado.Record.origen }} </td>\\n                            <td>{{ estado.Record.dst }} </td>\\n                            <td>{{ estado.Record.Orderer }} </td>\\n                            <td>{{ estado.Record.fechaenv }} </td>\\n                            <td *ngIf=\\\"esAdmin()\\\">  \\n                                <a style=\\\"width:140px; height: 40px;\\\" class=\\\"btn btn-unique waves-light rounded purple-grad\\\" [routerLink]=\\\"['/edtrans', estado.Key, 'channel13']\\\" mdbWavesEffect>Editar</a>\\n                            </td>\\n                            <td>\\n                                <a style=\\\"width:140px; height: 40px;\\\" class=\\\"btn btn-unique waves-light rounded danger-grad\\\" [routerLink]=\\\"['/transhist', estado.Key, 'channel13']\\\" mdbWavesEffect>Historial</a>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                    <!--Table body-->\\n                </table>\\n                <!--Table-->\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Entidad3';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './componentes/log/login/login.component';\nimport { SignupComponent } from './componentes/log/signup/signup.component';\nimport { HomeComponent } from './componentes/home/home.component';\nimport { PanelAdministracionComponent } from './componentes/panel-administracion/panel-administracion.component';\nimport { PerfilComponent } from './componentes/perfil/perfil.component';\nimport { EditarUsuarioComponent } from './componentes/editar-usuario/editar-usuario.component';\nimport { EliminarUsuarioComponent } from './componentes/eliminar-usuario/eliminar-usuario.component';\n\nimport { LogService } from './servicios/log.service';\nimport { AuthGuardService } from './servicios/auth-guard.service';\nimport { AdminGuardService } from './servicios/admin-guard.service';\nimport { UsuariosService } from './servicios/usuarios.service';\nimport { BlockchainService } from './servicios/blockchain.service'; \n\nimport { APP_ROUTING } from './app.routes';\nimport { NavbarComponent } from './componentes/shared/navbar/navbar.component';\nimport { FooterComponent } from './componentes/shared/footer/footer.component';\n\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { AddTransactionComponent } from './componentes/add-transaction/add-transaction.component';\nimport { EditarTransaccionComponent } from './componentes/editar-transaccion/editar-transaccion.component';\nimport { TransHistorialComponent } from './componentes/trans-historial/trans-historial.component';\nimport { WorldStateComponent } from './componentes/world-state/world-state.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    HomeComponent,\n    PanelAdministracionComponent,\n    PerfilComponent,\n    EditarUsuarioComponent,\n    EliminarUsuarioComponent,\n    NavbarComponent,\n    FooterComponent,\n    AddTransactionComponent,\n    EditarTransaccionComponent,\n    TransHistorialComponent,\n    WorldStateComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    APP_ROUTING,\n    MDBBootstrapModule.forRoot(),\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    LogService,\n    AuthGuardService,\n    AdminGuardService,\n    UsuariosService,\n    BlockchainService\n  ],\n  bootstrap: [AppComponent],\n  schemas: [NO_ERRORS_SCHEMA]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './componentes/home/home.component';\nimport { LoginComponent } from './componentes/log/login/login.component';\nimport { SignupComponent } from './componentes/log/signup/signup.component';\nimport { PanelAdministracionComponent } from './componentes/panel-administracion/panel-administracion.component';\nimport { PerfilComponent } from './componentes/perfil/perfil.component';\nimport { EditarUsuarioComponent } from './componentes/editar-usuario/editar-usuario.component';\nimport { AuthGuardService } from './servicios/auth-guard.service';\nimport { AdminGuardService } from './servicios/admin-guard.service';\nimport { EliminarUsuarioComponent } from './componentes/eliminar-usuario/eliminar-usuario.component';\nimport { WorldStateComponent } from './componentes/world-state/world-state.component'\nimport { AddTransactionComponent } from './componentes/add-transaction/add-transaction.component';\nimport { EditarTransaccionComponent } from './componentes/editar-transaccion/editar-transaccion.component';\nimport { TransHistorialComponent } from './componentes/trans-historial/trans-historial.component';\n\n\nconst app_routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'world-state', component: WorldStateComponent, canActivate: [AuthGuardService]},\n  { path: 'panelAdmin', component: PanelAdministracionComponent, canActivate: [AuthGuardService, AdminGuardService] },\n  { path: 'perfil', component: PerfilComponent, canActivate: [AuthGuardService] },\n  { path: 'editar/:id', component: EditarUsuarioComponent, canActivate: [AuthGuardService, AdminGuardService] },\n  { path: 'eluser/:id', component: EliminarUsuarioComponent, canActivate: [AuthGuardService, AdminGuardService] },\n  { path: 'edtrans/:id/:channel', component: EditarTransaccionComponent, canActivate: [AuthGuardService, AdminGuardService] },\n  { path: 'transhist/:id/:channel', component: TransHistorialComponent, canActivate: [AuthGuardService] },\n  { path: 'addtrans', component: AddTransactionComponent, canActivate: [AuthGuardService, AdminGuardService] },\n  { path: '**', pathMatch: 'full', redirectTo: 'home' }\n];\n\nexport const APP_ROUTING = RouterModule.forRoot(app_routes);","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudGVzL2FkZC10cmFuc2FjdGlvbi9hZGQtdHJhbnNhY3Rpb24uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms'\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BlockchainService } from '../../servicios/blockchain.service';\nimport { Subscription } from '../../../../node_modules/rxjs';\n\n@Component({\n  selector: 'app-add-transaction',\n  templateUrl: './add-transaction.component.html',\n  styleUrls: ['./add-transaction.component.scss'],\n  styles: [`\n    .ng-invalid.ng-touched:not(form){\n      color: red;\n  }\n`]\n})\nexport class AddTransactionComponent implements OnInit {\n\n  addTrans: FormGroup;\n\n  submitOk: boolean = null;\n  submitSusc: Subscription;\n\n  constructor(private _blockService: BlockchainService, private _router: Router, private _activatedRoute: ActivatedRoute) {\n    this.addTrans = new FormGroup({\n      'channel': new FormControl(\n        '', [\n        Validators.required,\n      ]),\n      'key': new FormControl(\n        '', [\n        Validators.required,\n        this.noVacio\n      ]),\n      'producto': new FormControl(\n        ''),\n      'modelo': new FormControl(\n        ''),\n      'tipo': new FormControl(\n        ''),\n      'dimensiones': new FormControl(\n        ''),\n      'fecha_fab': new FormControl(\n        '', [\n        Validators.pattern('^(0[1-9]|[12]\\\\d|3[01])-(0[1-9]|1[0-2])-[12]\\\\d{3}$')\n      ]),\n      'materiales': new FormControl(\n        ''),\n      'descripcion': new FormControl(\n        ''),\n      'cantidad': new FormControl(\n        ''),\n      'precio_ud': new FormControl(\n        ''),\n      'precio_tot': new FormControl(\n        ''),\n      'origen': new FormControl(\n        'Org3'),\n      'dst': new FormControl(\n        '', [\n          Validators.required\n        ]),\n      'ordenante': new FormControl(\n        localStorage.getItem('Nombre')),\n      'fecha_env': new FormControl(\n        '', [\n        Validators.pattern('^(0[1-9]|[12]\\\\d|3[01])-(0[1-9]|1[0-2])-[12]\\\\d{3}$')\n      ]),\n    });\n  }\n\n  ngOnInit() {\n    this.submitSusc = this._blockService.submitObservable.subscribe(valor => {\n      this.submitOk = valor;\n    });\n\n    this.addTrans.controls['key'].disable();\n    this.addTrans.controls['origen'].disable();\n    this.addTrans.controls['ordenante'].disable();\n  }\n\n  ngOnDestroy() {\n    this._blockService.submitObservable.next(null);\n    this.submitSusc.unsubscribe();\n  }\n\n  reload() {\n    console.log(this.addTrans.controls['channel'].value);\n    this._blockService.getLastKey(this.addTrans.controls['channel'].value.trim()).subscribe(key => {\n      this.addTrans.controls['key'].setValue((+key.response + 1).toString());\n    })\n  }\n\n  crear() {\n    let trans = {\n      channel: this.addTrans.controls['channel'].value.trim(),\n      key: this.addTrans.controls['key'].value.trim(),\n      producto: this.addTrans.controls['producto'].value.trim(),\n      modelo: this.addTrans.controls['modelo'].value.trim(),\n      tipo: this.addTrans.controls['tipo'].value.trim(),\n      dimensiones: this.addTrans.controls['dimensiones'].value.trim(),\n      fechafab: this.addTrans.controls['fecha_fab'].value.trim(),\n      materiales: this.addTrans.controls['materiales'].value.trim(),\n      descripcion: this.addTrans.controls['descripcion'].value.trim(),\n      cantidad: this.addTrans.controls['cantidad'].value.trim(),\n      precioud: this.addTrans.controls['precio_ud'].value.trim(),\n      preciotot: this.addTrans.controls['precio_tot'].value.trim(),\n      org: this.addTrans.controls['origen'].value.trim(),\n      dst: this.addTrans.controls['dst'].value.trim(),\n      ordenante: this.addTrans.controls['ordenante'].value.trim(),\n      fechaenv: this.addTrans.controls['fecha_env'].value.trim()\n    }\n    console.log(trans);\n\n    this._blockService.submitTransaction(trans).subscribe(resp => {\n      this._blockService.submitObservable.next(true);\n    },\n      error => {\n        this._blockService.submitObservable.next(false);\n        console.log(error);\n      })\n  }\n\n  /*******************************\n  Funciones de validación extras\n  ********************************/\n  noVacio(control: FormControl): { [s: string]: boolean } { //Devuelve un string seguido de un valor booleano\n    if (typeof control.value === 'string' && !control.value.trim()) {\n      return {\n        novacio: true\n      }\n    }\n    return null;\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudGVzL2VkaXRhci10cmFuc2FjY2lvbi9lZGl0YXItdHJhbnNhY2Npb24uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms'\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BlockchainService } from '../../servicios/blockchain.service';\nimport { Subscription } from '../../../../node_modules/rxjs';\n\n@Component({\n  selector: 'app-editar-transaccion',\n  templateUrl: './editar-transaccion.component.html',\n  styleUrls: ['./editar-transaccion.component.scss'],\n  styles: [`\n    .ng-invalid.ng-touched:not(form){\n      color: red;\n  }\n`]\n})\nexport class EditarTransaccionComponent implements OnInit {\n\n  editTrans: FormGroup;\n\n  submitOk: boolean = null;\n  submitSusc: Subscription;\n\n  ngOnInit() {\n    //Inicialización de los parámetros del formulario con los valores de la transacción\n    this._activatedRoute.params.subscribe(datos => {\n      this._blockService.queryTransaction(datos['channel'], datos['id']).subscribe(\n        resp => {\n          let trans = JSON.parse(resp.response);\n          console.log(trans);\n          console.log(trans.producto);\n          this.editTrans.controls['channel'].disable();\n          this.editTrans.controls['key'].disable();\n          this.editTrans.controls['ordenante'].disable();\n          this.editTrans.controls['origen'].disable();\n\n          this.editTrans.controls['channel'].setValue(datos['channel']);\n          this.editTrans.controls['key'].setValue(datos['id']);\n          this.editTrans.controls['producto'].setValue(trans.producto);\n          this.editTrans.controls['modelo'].setValue(trans.modelo);\n          this.editTrans.controls['tipo'].setValue(trans.tipo);\n          this.editTrans.controls['dimensiones'].setValue(trans.dimensiones);\n          this.editTrans.controls['fecha_fab'].setValue(trans.fechafab);\n          this.editTrans.controls['materiales'].setValue(trans.materiales);\n          this.editTrans.controls['descripcion'].setValue(trans.descripcion);\n          this.editTrans.controls['cantidad'].setValue(trans.cantidad);\n          this.editTrans.controls['precio_ud'].setValue(trans.precio_ud);\n          this.editTrans.controls['precio_tot'].setValue(trans.precio_tot);\n          this.editTrans.controls['origen'].setValue(trans.origen);\n          this.editTrans.controls['dst'].setValue(trans.dst);\n          this.editTrans.controls['ordenante'].setValue(localStorage.getItem(\"Nombre\"));\n          this.editTrans.controls['fecha_env'].setValue(trans.fechaenv);\n        }\n      )\n    })\n\n    this.submitSusc = this._blockService.submitObservable.subscribe(valor => {\n      this.submitOk = valor;\n    })\n  }\n\n  ngOnDestroy() {\n    this._blockService.submitObservable.next(null);\n    this.submitSusc.unsubscribe();\n  }\n\n  constructor(private _blockService: BlockchainService, private _router: Router, private _activatedRoute: ActivatedRoute) {\n    this.editTrans = new FormGroup({\n      'channel': new FormControl(\n        '', [\n        Validators.required,\n      ]),\n      'key': new FormControl(\n        '', [\n        Validators.required,\n      ]),\n      'producto': new FormControl(\n        ''),\n      'modelo': new FormControl(\n        ''),\n      'tipo': new FormControl(\n        ''),\n      'dimensiones': new FormControl(\n        ''),\n      'fecha_fab': new FormControl(\n        '', [\n        Validators.pattern('^(0[1-9]|[12]\\\\d|3[01])-(0[1-9]|1[0-2])-[12]\\\\d{3}$')\n      ]),\n      'materiales': new FormControl(\n        ''),\n      'descripcion': new FormControl(\n        ''),\n      'cantidad': new FormControl(\n        ''),\n      'precio_ud': new FormControl(\n        ''),\n      'precio_tot': new FormControl(\n        ''),\n      'origen': new FormControl(\n        ''),\n      'dst': new FormControl(\n        ''),\n      'ordenante': new FormControl(\n        localStorage.getItem(\"Nombre\")),\n      'fecha_env': new FormControl(\n        '', [\n        Validators.pattern('^(0[1-9]|[12]\\\\d|3[01])-(0[1-9]|1[0-2])-[12]\\\\d{3}$')\n      ]),\n    });\n  }\n\n  reload() {\n    this._activatedRoute.params.subscribe(datos => {\n      this._blockService.queryTransaction(datos['channel'], datos['id']).subscribe(\n        resp => {\n          let trans = JSON.parse(resp.response);\n          console.log(trans);\n\n          this.editTrans.controls['channel'].disable();\n          this.editTrans.controls['key'].disable();\n          this.editTrans.controls['ordenante'].disable();\n          this.editTrans.controls['origen'].disable();\n\n          this.editTrans.controls['channel'].setValue(datos['channel']);\n          this.editTrans.controls['key'].setValue(datos['id']);\n          this.editTrans.controls['producto'].setValue(trans.producto);\n          this.editTrans.controls['modelo'].setValue(trans.modelo);\n          this.editTrans.controls['tipo'].setValue(trans.tipo);\n          this.editTrans.controls['dimensiones'].setValue(trans.dimensiones);\n          this.editTrans.controls['fecha_fab'].setValue(trans.fechafab);\n          this.editTrans.controls['materiales'].setValue(trans.materiales);\n          this.editTrans.controls['descripcion'].setValue(trans.descripcion);\n          this.editTrans.controls['cantidad'].setValue(trans.cantidad);\n          this.editTrans.controls['precio_ud'].setValue(trans.precio_ud);\n          this.editTrans.controls['precio_tot'].setValue(trans.precio_tot);\n          this.editTrans.controls['origen'].setValue(trans.origen);\n          this.editTrans.controls['dst'].setValue(trans.dst);\n          this.editTrans.controls['ordenante'].setValue(localStorage.getItem(\"Nombre\"));\n          this.editTrans.controls['fecha_env'].setValue(trans.fechaenv);\n        }\n      )\n    })\n  }\n\n  editar() {\n    let trans = {\n      channel: this.editTrans.controls['channel'].value.trim(),\n      key: this.editTrans.controls['key'].value.trim(),\n      producto: this.editTrans.controls['producto'].value.trim(),\n      modelo: this.editTrans.controls['modelo'].value.trim(),\n      tipo: this.editTrans.controls['tipo'].value.trim(),\n      dimensiones: this.editTrans.controls['dimensiones'].value.trim(),\n      fechafab: this.editTrans.controls['fecha_fab'].value.trim(),\n      materiales: this.editTrans.controls['materiales'].value.trim(),\n      descripcion: this.editTrans.controls['descripcion'].value.trim(),\n      cantidad: this.editTrans.controls['cantidad'].value.trim(),\n      precioud: this.editTrans.controls['precio_ud'].value.trim(),\n      preciotot: this.editTrans.controls['precio_tot'].value.trim(),\n      org: this.editTrans.controls['origen'].value.trim(),\n      dst: this.editTrans.controls['dst'].value.trim(),\n      ordenante: this.editTrans.controls['ordenante'].value.trim(),\n      fechaenv: this.editTrans.controls['fecha_env'].value.trim()\n    }\n    console.log(trans);\n\n    this._blockService.editTransaction(trans).subscribe(resp => {\n      this._blockService.submitObservable.next(true);\n    },\n      error => {\n        this._blockService.submitObservable.next(false);\n        console.log(error);\n      })\n  }\n\n  /*******************************\n  Funciones de validación extras\n  ********************************/\n  noVacio(control: FormControl): { [s: string]: boolean } { //Devuelve un string seguido de un valor booleano\n    if (typeof control.value === 'string' && !control.value.trim()) {\n      return {\n        novacio: true\n      }\n    }\n    return null;\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudGVzL2VkaXRhci11c3VhcmlvL2VkaXRhci11c3VhcmlvLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms'\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UsuariosService } from '../../servicios/usuarios.service';\nimport { Usuario } from '../../interfaces/usuario.interface';\nimport { Subscription } from '../../../../node_modules/rxjs';\n\n@Component({\n  selector: 'app-editar',\n  templateUrl: './editar-usuario.component.html',\n  styleUrls: ['./editar-usuario.component.scss'],\n  styles: [`\n    .ng-invalid.ng-touched:not(form){\n      color: red;\n  }\n`]\n})\nexport class EditarUsuarioComponent implements OnInit {\n\n  cambioDatos: FormGroup;\n  cambioPass: FormGroup;\n  usuario = null;\n\n  editok: boolean = null;\n  passok: boolean = null;\n\n  editsusc: Subscription;\n  passsusc: Subscription;\n\n  ngOnInit() {\n    //Inicialización de los parámetros del formulario con los valores del usuario\n    this._activatedRoute.params.subscribe(datos => {\n      this._usuariosService.buscarUsuarioId(datos['id']).subscribe(\n        resp => {\n          this.usuario = resp;\n          console.log(resp);\n          console.log(this.usuario);\n          this.cambioDatos.controls['nombre'].setValue(resp.nombre);\n          this.cambioDatos.controls['correo'].setValue(resp.correo);\n          this.cambioDatos.controls['permisos'].setValue(resp.permisos);\n        }\n      )\n    })\n\n    //Nos suscribimos a los observadores para poder controlar los cambios en los mensajes de confirmación/error\n    this.editsusc = this._usuariosService.editObservable.subscribe( valor => {\n      this.editok = valor;\n    })\n    this.passsusc = this._usuariosService.passObservable.subscribe( valor => {\n      this.passok = valor;\n    })\n  }\n\n  ngOnDestroy(){\n    this._usuariosService.editObservable.next(null);\n    this._usuariosService.passObservable.next(null);\n    this.editsusc.unsubscribe();\n    this.passsusc.unsubscribe();\n  }\n\n  constructor(private _usuariosService: UsuariosService, private _router: Router, private _activatedRoute: ActivatedRoute) {\n\n    this.cambioDatos = new FormGroup({\n      'nombre': new FormControl(\n        \"\", [\n          Validators.required,\n          Validators.minLength(3),\n          this.noVacio\n        ]),\n      'correo': new FormControl(\n        \"\", [\n          Validators.required,\n          Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.{1}[a-z]{2,3}$\"),\n          this.noVacio\n        ]),\n      'permisos': new FormControl(\n        \"\", [\n          Validators.required\n        ]\n      )\n    });\n\n    this.cambioPass = new FormGroup({\n      'nuevaPass': new FormControl('', [\n        Validators.required,\n        this.noVacio,\n        Validators.pattern(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{5,}$\")\n      ]),\n      'rePass': new FormControl()\n    });\n\n    this.cambioPass.controls['rePass'].setValidators([\n      Validators.required,\n      this.noVacio,\n      this.coinciden.bind(this)\n    ])\n  }\n\n\n  /*******************************\n   Funciones funcionales extras\n   *******************************/\n\n  editarInfo() {\n    let edit:Usuario = {\n      Id: this.usuario.id,\n      Nombre: this.cambioDatos.controls['nombre'].value.trim(),\n      Correo: this.cambioDatos.controls['correo'].value.trim(),\n      Permisos: this.cambioDatos.controls['permisos'].value.trim()\n    }\n    console.log(edit);\n\n    this._usuariosService.editarDatos(edit, \"EditUser\")\n      .subscribe(respuesta => {\n        this._usuariosService.editObservable.next(true);\n      },\n      error => {\n        this._usuariosService.editObservable.next(false);\n        console.log(error);\n      }\n    )\n  }\n\n  cambiarPassword() {\n    let nuevaPass = {\n      Id: this.usuario.id,\n      Hash: this.cambioPass.controls['nuevaPass'].value.trim()\n    }\n    console.log(nuevaPass);\n\n    this._usuariosService.cambiarPass(nuevaPass, \"ChangePUser\")\n      .subscribe(respuesta => {\n        this._usuariosService.passObservable.next(true);\n      },\n      error => {\n        this._usuariosService.passObservable.next(false);\n        console.log(error);\n      }\n    )\n  }\n\n  /*******************************\n  Funciones de validación extras\n  ********************************/\n  noVacio(control: FormControl): { [s: string]: boolean } { //Devuelve un string seguido de un valor booleano\n    if (typeof control.value === 'string' && !control.value.trim()) {\n      return {\n        novacio: true\n      }\n    }\n    return null;\n  }\n\n\n  coinciden(control: FormControl): { [s: string]: boolean } {\n    if (control.value !== this.cambioPass.controls['nuevaPass'].value) {\n      return {\n        nocoinciden: true\n      }\n    }\n    return null;\n  }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudGVzL2VsaW1pbmFyLXVzdWFyaW8vZWxpbWluYXItdXN1YXJpby5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UsuariosService } from '../../servicios/usuarios.service';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-eliminar-usuario',\n  templateUrl: './eliminar-usuario.component.html',\n  styleUrls: ['./eliminar-usuario.component.scss']\n})\nexport class EliminarUsuarioComponent implements OnInit {\n\n  constructor(private _activatedRoute: ActivatedRoute, private _router:Router,\n    private _usuariosService: UsuariosService, private _location:Location) { }\n\n  ngOnInit() {\n  }\n\n  eliminar(){\n    let id = this._location.path().split(\"/\")[2];\n    this._usuariosService.eliminarUsuario(id).subscribe( resp => {\n      if(resp.ok){\n        this._router.navigate(['/panelAdmin']);\n      }\n    });\n  }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudGVzL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { LogService } from '../../servicios/log.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  Nombre:String;\n\n  constructor(private _logService: LogService) { }\n\n  ngOnInit() {\n    //Comprobamos si la sesión del usuario está activa\n    if (this.sesionActiva()) {\n      this.Nombre = localStorage.getItem(\"Nombre\");\n    }\n  }\n\n  sesionActiva(): boolean {\n    return this._logService.sesionValida();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudGVzL2xvZy9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, NgZone, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LogService } from '../../../servicios/log.service';\nimport { Usuario } from '../../../interfaces/usuario.interface';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  styles: [`\n    .ng-invalid.ng-touched:not(form){\n      color: red;\n    }\n  `]\n})\nexport class LoginComponent implements OnInit {\n\n  //Variables\n  forma: FormGroup;\n  correcto: boolean;\n  subscription: Subscription;\n\n  datos: Usuario = {\n    Nombre: null,\n    Correo: null,\n    Hash: null\n  }\n\n  ngOnInit() {\n    if (this._logService.sesionValida()) {\n      this._router.navigate(['/home']);\n    }\n    this.subscription = this._logService.logObservable.subscribe(valor => {\n      this.correcto = valor;\n    });\n  }\n\n  ngOnDestroy() {\n    this._logService.logObservable.next(true);\n    this.subscription.unsubscribe();\n  }\n\n  constructor(private _logService: LogService, private _router: Router, private ref: ChangeDetectorRef) {\n\n    this.forma = new FormGroup({\n      'email': new FormControl('', [\n        Validators.required,\n        Validators.pattern(\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\"),\n        this.noVacio\n      ]),\n\n      'password': new FormControl('', [\n        Validators.required,\n        this.noVacio\n      ])\n    });\n  }\n\n  logearse() {\n    this.datos = {\n      Nombre: null,\n      Correo: this.forma.controls['email'].value,\n      Hash: this.forma.controls['password'].value\n    }\n\n    console.log(this.datos);\n\n    this._logService.conectarse(this.datos)\n      .subscribe(resp => {\n        console.log(resp);\n        this._router.navigate(['/home']);\n      },\n        error => {\n          this._logService.logObservable.next(false);\n          console.log(error);\n          if(error.error.text != null){\n            this._logService.crearSesion(error.error.text);\n            this._router.navigate(['/home']);\n          }\n        }\n      );\n  }\n\n  //Validaciones\n  noVacio(control: FormControl): { [s: string]: boolean } { //Devuelve un string que es de tipo booleano\n    if (typeof control.value === 'string' && !control.value.trim()) {\n      return {\n        novacio: true\n      }\n    }\n    return null;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudGVzL2xvZy9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, AsyncValidatorFn, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Usuario } from '../../../interfaces/usuario.interface';\nimport { LogService } from '../../../servicios/log.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss'],\n  styles: [`\n    .ng-invalid.ng-touched:not(form){\n      color: red;\n    }\n  `]\n})\nexport class SignupComponent implements OnInit {\n\n  //Variables \n  forma: FormGroup;\n\n  usuario: Usuario = {\n    Nombre: null,\n    Correo: null,\n    Hash: null\n  }\n\n\n  ngOnInit() {\n    if (this._logService.sesionValida()) {\n      this._router.navigate(['/home']);\n    }\n  }\n\n  //Constructor\n  constructor(private _logService: LogService, private _router: Router) {\n\n    this.forma = new FormGroup({ //Pueden anidarse FormGroups dentro de otros FormGroups en caso de disponer de campos compuestos\n      'nombre': new FormControl('', [\n        Validators.required,\n        Validators.minLength(3),\n        this.noVacio\n      ]),\n\n      'email': new FormControl('', [\n        Validators.required,\n        Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.{1}[a-z]{2,3}$\"),\n        this.noVacio\n      ],\n      [\n        this.existeEmail.bind(this)\n      ]),\n\n      'password': new FormControl('', [\n        Validators.required,\n        this.noVacio,\n        Validators.pattern(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-+()|]).{5,}$\")\n      ]),\n      'repassReg': new FormControl()\n    });\n\n    /*\n    Validación de las passwords\n    -----------------------------------\n    Se utiliza esta forma para comprender el contexto en el que se puede utilizar o no this.\n    Al utilizar coinciden.bind(this) lo que se consigue es que dentro del contexto de la función cuando se haga referencia\n    a this en realidad se está haciendo referencia al this del contexto actual y general.\n    Se podría realizar al igual que el resto de validaciones pero esta es una forma alternativa e igual de válida.\n    */\n    this.forma.controls['repassReg'].setValidators([\n      Validators.required,\n      this.noVacio,\n      this.coinciden.bind(this) //Se utiliza para vincular \"this\" en el contexto de la función y poder acceder a \"this.forma\" desde coinciden\n    ])\n\n    //this.forma.setValue(this.usuario); De esta forma se pueden dar valores por defecto a cada campo.\n  }\n\n  //Función a la que se llama una vez el formulario ha sido validado\n  registrar() {\n    this.usuario = {\n      Nombre: this.forma.controls['nombre'].value.trim(),\n      Correo: this.forma.controls['email'].value.trim(),\n      Hash: this.forma.controls['password'].value.trim()\n    }\n    console.log(this.usuario);\n\n    this._logService.nuevoUsuario(this.usuario)\n      .subscribe((respuesta: Response) => {\n        if (respuesta.ok) {\n          this._router.navigate(['/login']);\n        }\n      }\n      );\n  }\n\n  //Validaciones\n  noVacio(control: FormControl): { [s: string]: boolean } { //Devuelve un string que es de tipo booleano\n    if (typeof control.value === 'string' && !control.value.trim()) {\n      return {\n        novacio: true\n      }\n    }\n    return null;\n  }\n\n  coinciden(control: FormControl): { [s: string]: boolean } {\n    if (control.value !== this.forma.controls['password'].value) { //Es válido porque antes de llamar a la función vinculamos this con this usando bind\n      return {                    //En caso contrario no funcionaría al no detectar el contexto adecuado\n        nocoindicen: true\n      }\n    }\n    return null;\n  }\n\n  existeEmail(control: FormControl): Promise<ValidationErrors | null > {\n\n    return new Promise((resolve, reject) => {\n \n      setTimeout(() => {\n \n        this._logService.existeEmail(control.value).subscribe( respuesta => {\n          console.log(control);\n          if(respuesta == 0){\n            resolve(null);\n          }else{\n            resolve({existeEmail: true});\n          }\n        }, error => {\n          console.log(error);\n          reject();\n        });\n \n      }, 1000);     \n \n    });\n  }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudGVzL3BhbmVsLWFkbWluaXN0cmFjaW9uL3BhbmVsLWFkbWluaXN0cmFjaW9uLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { UsuariosService } from '../../servicios/usuarios.service';\nimport { Usuario } from '../../interfaces/usuario.interface';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-panel-administracion',\n  templateUrl: './panel-administracion.component.html',\n  styleUrls: ['./panel-administracion.component.scss']\n})\nexport class PanelAdministracionComponent implements OnInit {\n\n  searchText: String;\n  usuarios: Usuario[];\n\n  constructor(private _usuariosService: UsuariosService, private _router: Router) {\n    _usuariosService.obtenerUsuarios().subscribe((datos) => {\n      this.usuarios = datos;\n      console.log(datos);\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  buscar(): any {\n    this._usuariosService.buscarUsuario(this.searchText).subscribe((datos) => {\n      this.usuarios = datos;\n      console.log(datos);\n    })\n  }\n\n  todos(): any {\n    this._usuariosService.obtenerUsuarios().subscribe( datos => {\n      this.usuarios = datos;\n    })\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudGVzL3BlcmZpbC9wZXJmaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validator, FormControl, Validators } from '@angular/forms'\nimport { Router } from '@angular/router';\nimport { UsuariosService } from '../../servicios/usuarios.service';\nimport { LogService } from '../../servicios/log.service';\nimport { Subject, Subscription } from '../../../../node_modules/rxjs';\nimport { Usuario } from '../../interfaces/usuario.interface';\n\n@Component({\n  selector: 'app-perfil',\n  templateUrl: './perfil.component.html',\n  styleUrls: ['./perfil.component.scss'],\n  styles: [`\n    .ng-invalid.ng-touched:not(form){\n      color: red;\n  }\n`]\n})\nexport class PerfilComponent implements OnInit {\n\n  cambioDatos: FormGroup;\n  cambioPass: FormGroup;\n\n  editok:boolean = null;\n  passok:boolean = null;\n\n  editsusc:Subscription;\n  passsusc:Subscription;\n\n  ngOnInit() {\n    this.editsusc = this._usuariosService.editObservable.subscribe( valor => {\n      this.editok = valor;\n    })\n    this.passsusc = this._usuariosService.passObservable.subscribe( valor => {\n      this.passok = valor;\n    })\n  }\n\n  ngOnDestroy(){\n    this._usuariosService.editObservable.next(null);\n    this._usuariosService.passObservable.next(null);\n    this.editsusc.unsubscribe();\n    this.passsusc.unsubscribe();\n  }\n\n  constructor(private _usuariosService: UsuariosService, private _router:Router, private _logService:LogService ) {\n\n    this.cambioDatos = new FormGroup({\n      'nombre': new FormControl(\n        localStorage.getItem(\"Nombre\"), [\n          Validators.required,\n          Validators.minLength(3),\n          this.noVacio\n        ]),\n      'correo': new FormControl(\n        localStorage.getItem(\"Correo\"), [\n          Validators.required,\n          Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.{1}[a-z]{2,3}$\"),\n          this.noVacio\n        ])\n    });\n\n    this.cambioPass = new FormGroup({\n      'nuevaPass': new FormControl(\"\", [\n        Validators.required,\n        this.noVacio,\n        Validators.pattern(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{5,}$\")\n      ]),\n      'rePass': new FormControl()\n    });\n\n    this.cambioPass.controls['rePass'].setValidators([\n      Validators.required,\n      this.noVacio,\n      this.coinciden.bind(this)\n    ])\n  }\n\n\n  /*******************************\n   Funciones funcionales extras\n   *******************************/\n  \n  editarInfo() {\n    let edit:Usuario = {\n      Id: +localStorage.getItem(\"Id\"),\n      Nombre: this.cambioDatos.controls['nombre'].value.trim(),\n      Correo: this.cambioDatos.controls['correo'].value.trim(),\n      Permisos: localStorage.getItem(\"Permisos\")\n    }\n\n    this._usuariosService.editarDatos(edit, \"Edit\")\n      .subscribe(respuesta => {\n            this._logService.cerrarSesion();\n            this._logService.crearSesion(respuesta.body);\n            this._usuariosService.editObservable.next(true);\n          },\n          error => {\n            console.log(error);\n            if(error.error.text != null){\n              this._logService.crearSesion(error.error.text);\n              this._usuariosService.editObservable.next(true);\n            }else{\n              this._usuariosService.editObservable.next(false);\n            }\n          }\n        )\n  }\n\n  cambiarPassword(){\n    let nuevaPass = {\n      Id: +localStorage.getItem(\"Id\"),\n      Hash: this.cambioPass.controls['nuevaPass'].value.trim()\n    }\n    console.log(nuevaPass);\n\n    this._usuariosService.cambiarPass(nuevaPass, \"ChangeP\")\n      .subscribe( respuesta => {\n        this._usuariosService.passObservable.next(true);\n      }, error => {\n        this._usuariosService.passObservable.next(false);\n        console.log(error);\n      }\n    )\n  }\n\n  /*******************************\n  Funciones de validación extras\n  ********************************/\n  noVacio(control: FormControl): { [s: string]: boolean } { //Devuelve un string seguido de un valor booleano\n    if (typeof control.value === 'string' && !control.value.trim()) {\n      return {\n        novacio: true\n      }\n    }\n    return null;\n  }\n\n\n  coinciden(control: FormControl): { [s: string]: boolean } {\n    if (control.value !== this.cambioPass.controls['nuevaPass'].value) {\n      return {\n        nocoinciden: true\n      }\n    }\n    return null;\n  }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudGVzL3NoYXJlZC9mb290ZXIvZm9vdGVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudGVzL3NoYXJlZC9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { LogService } from '../../../servicios/log.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor( private _logService:LogService, private _router:Router) { }\n\n  ngOnInit() {\n  }\n\n  sesionActiva():boolean{\n    return this._logService.sesionValida();\n  }\n\n  esAdmin():boolean{\n    return this._logService.esAdmin();\n  }\n\n  desconectarse(){\n    this._logService.cerrarSesion();\n    this._router.navigate(['/home']);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudGVzL3RyYW5zLWhpc3RvcmlhbC90cmFucy1oaXN0b3JpYWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { BlockchainService } from '../../servicios/blockchain.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-trans-historial',\n  templateUrl: './trans-historial.component.html',\n  styleUrls: ['./trans-historial.component.scss']\n})\nexport class TransHistorialComponent implements OnInit {\n\n  historial: any[];\n  key: string;\n\n  constructor(private _blockService: BlockchainService, private _router: Router, private _activatedRoute: ActivatedRoute) {\n    this.queryHist();\n  }\n\n  ngOnInit() {\n    this.queryHist();\n  }\n\n  queryHist() {\n    this._activatedRoute.params.subscribe(datos => {\n      this.key = datos['id'];\n      this._blockService.queryHist(datos['channel'], datos['id']).subscribe(\n        resp => {\n          let hists = JSON.parse(resp.response);\n          console.log(hists);\n          this.historial = hists;\n        })\n    })\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudGVzL3dvcmxkLXN0YXRlL3dvcmxkLXN0YXRlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { BlockchainService } from '../../servicios/blockchain.service';\nimport { Router } from '@angular/router';\nimport { Trans } from '../../interfaces/trans.interface';\nimport { LogService } from 'src/app/servicios/log.service';\n\n@Component({\n  selector: 'app-world-state',\n  templateUrl: './world-state.component.html',\n  styleUrls: ['./world-state.component.scss']\n})\nexport class WorldStateComponent implements OnInit {\n\n  channelall: Trans[];\n  channel13: Trans[];\n\n  channelall_lastKey: string = \"\"; \n  channel13_lastKey: string = \"\";\n\n  constructor(private _blockService:BlockchainService, private _router: Router, private _logService:LogService) { \n  }\n\n  ngOnInit() {\n    this.queryChannelAll();\n    this.queryChannel13();\n    this.getLastKeyAll();\n    this.getLastKey13();\n  }\n\n  esAdmin():boolean{\n    return this._logService.esAdmin();\n  }\n\n  getLastKeyAll(){\n    this._blockService.getLastKey(\"channelall\").subscribe( (key) => {\n      console.log(key.response);\n      this.channelall_lastKey = (+key.response + 1).toString();\n    })\n  }\n\n  getLastKey13(){\n    this._blockService.getLastKey(\"channel13\").subscribe( (key) => {\n      console.log(key.response);\n      this.channel13_lastKey = (+key.response + 1).toString();\n    })\n  }\n\n  queryChannelAll(): any{\n    this.getLastKeyAll();\n\n    let lastIdx;\n    if(this.channelall_lastKey == \"\"){\n      lastIdx = \"9\";\n    }else{\n      lastIdx = this.channelall_lastKey;\n    }\n    this._blockService.queryTransactions(\"channelall\",\"1\",lastIdx).subscribe((datos) => {\n      console.log(JSON.parse(datos.response));\n      this.channelall = JSON.parse(datos.response);\n    })\n  }\n\n  queryChannel13(): any{\n    this.getLastKey13();\n\n    let lastIdx;\n    if(this.channel13_lastKey == \"\"){\n      lastIdx = \"9\";\n    }else{\n      lastIdx = this.channel13_lastKey;\n    }\n    this._blockService.queryTransactions(\"channel13\",\"1\",lastIdx).subscribe((datos) => {\n      console.log(JSON.parse(datos.response));\n      this.channel13 = JSON.parse(datos.response);\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { RouterStateSnapshot, ActivatedRouteSnapshot, CanActivate } from '@angular/router';\nimport { LogService } from './log.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuardService implements CanActivate {\n\n  constructor(private _logService: LogService) {\n\n  }\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this._logService.esAdmin();\n  }\n}","import { Injectable } from '@angular/core';\nimport { RouterStateSnapshot, ActivatedRouteSnapshot, CanActivate } from '@angular/router';\nimport { LogService } from './log.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private _logService: LogService) {\n\n  }\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this._logService.sesionValida();\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { BehaviorSubject } from '../../../node_modules/rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlockchainService {\n\n  nodeapi: string = \"https://51.145.147.212:8080/api/\";\n  transacciones: string[]\n  submitObservable:BehaviorSubject<boolean>;\n\n  constructor(private http: HttpClient) {\n    this.submitObservable = new BehaviorSubject<boolean>(null);\n  }\n\n  test(): any{\n    let headers = new HttpHeaders({\n      'Content-type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    });\n\n    let url = `${this.nodeapi}test`;\n    return this.http.get(url, { headers, observe: 'response' }).pipe(\n      map(resp => {\n        console.log(resp);\n      })\n    )\n  }\n\n  getLastKey(channel:string): any{\n    let headers = new HttpHeaders({\n      'Content-type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    });\n    let datos = {\n      channel : channel,\n      key : \"lastKey\"\n    }\n\n    let body = JSON.stringify(datos);\n    console.log(body);\n\n    let url = `${this.nodeapi}query`;\n    return this.http.post(url, body, { headers, observe: 'response' }).pipe(\n      map(resp => {\n        console.log(resp);\n        if (resp.ok) {\n          return resp.body;\n        } \n      })\n    )\n  }\n\n  queryTransactions(channel:string, initKey:string, endKey:string): any {\n    let headers = new HttpHeaders({\n      'Content-type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    });\n    let datos = {\n      channel : channel,\n      initKey : initKey,\n      endKey : endKey\n    }\n    let body = JSON.stringify(datos);\n    console.log(body);\n\n    let url = `${this.nodeapi}queryall`;\n    return this.http.post(url, body, { headers, observe: 'response' }).pipe(\n      map(resp => {\n        console.log(resp);\n        if (resp.ok) {\n          return resp.body;\n        } \n      })\n    )\n  }\n\n  queryTransaction(channel:string, key:string): any {\n    let headers = new HttpHeaders({\n      'Content-type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    });\n    let datos = {\n      channel : channel,\n      key : key\n    }\n    let body = JSON.stringify(datos);\n    console.log(body);\n\n    let url = `${this.nodeapi}query`;\n    return this.http.post(url, body, { headers, observe: 'response' }).pipe(\n      map(resp => {\n        console.log(resp);\n        if (resp.ok) {\n          return resp.body;\n        } \n      })\n    )\n  }\n\n  queryHist(channel:string, key:string): any {\n    let headers = new HttpHeaders({\n      'Content-type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    });\n    let datos = {\n      channel : channel,\n      key : key\n    }\n    let body = JSON.stringify(datos);\n    console.log(body);\n\n    let url = `${this.nodeapi}queryhist`;\n    return this.http.post(url, body, { headers, observe: 'response' }).pipe(\n      map(resp => {\n        console.log(resp);\n        if (resp.ok) {\n          return resp.body;\n        } \n      })\n    )\n  }\n\n  submitTransaction(newTrans:any): any {\n    let headers = new HttpHeaders({\n      'Content-type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    });\n    let body = JSON.stringify(newTrans);\n    console.log(body);\n\n    let url = `${this.nodeapi}addship`;\n    return this.http.post(url, body, { headers, observe: 'response' }).pipe(\n      map(resp => {\n        console.log(resp);\n        return resp;\n      })\n    )\n  }\n\n  editTransaction(newTrans:any): any {\n    let headers = new HttpHeaders({\n      'Content-type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    });\n    let body = JSON.stringify(newTrans);\n    console.log(body);\n\n    let url = `${this.nodeapi}editship`;\n    return this.http.post(url, body, { headers, observe: 'response' }).pipe(\n      map(resp => {\n        console.log(resp);\n        return resp;\n      })\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Usuario } from '../interfaces/usuario.interface';\nimport { map } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable()\nexport class LogService {\n\n  apptime: string = \"https://apitfm.azurewebsites.net/api/Entidad3/\";\n  logObservable: BehaviorSubject<boolean>;\n\n  constructor(private http: HttpClient) {\n    this.logObservable = new BehaviorSubject<boolean>(true);\n  }\n\n  //Función que envía la información del usuario para registrarlo\n  nuevoUsuario(usuario: Usuario): any {\n    let body = JSON.stringify(usuario);\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    let url = this.apptime + \"Save\";\n    return this.http.post(url, body, { headers, observe: 'response' }).pipe(\n      map(resp => {\n        console.log(resp);\n        return resp;\n      }))\n  }\n\n  //Función que envía las credenciales para iniciar sesión\n  conectarse(datos: Usuario): any {\n    let body = JSON.stringify(datos);\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    });\n    let url = `${this.apptime}Log`;\n\n    return this.http.post(url, body, { headers, observe: 'response' })\n      .pipe(\n        map(resp => {\n          // if (resp.ok) {\n          //   this.crearSesion(resp.body);\n          // }\n          return resp;\n        })\n      )\n  }\n\n  //Función que comprueba si existe un email dado\n  existeEmail(email: String): any {\n    let datos = {\n      Correo: email\n    };\n\n    let body = JSON.stringify(datos);\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    let url = `${this.apptime}Existe`;\n\n    return this.http.post(url, body, { headers, observe: 'response'})\n      .pipe(\n        map(resp => {\n          return resp.body;\n        })\n      )\n  }\n\n  //Función que crea la sesión del usuario en el navegador\n  crearSesion(token: any): void {\n    let tokenJson = JSON.parse(atob(token.split('.')[1])); //atob es una función que decodifica un string en base64\n    let tokenString = token.toString();\n\n    //Almacenamos la información en el almacenamiento local\n    localStorage.setItem(\"Ent3-token\", tokenString);\n    localStorage.setItem(\"Nombre\", tokenJson.Nombre);\n    localStorage.setItem(\"Correo\", tokenJson.Correo);\n    localStorage.setItem(\"Id\", tokenJson.Id);\n    localStorage.setItem(\"Permisos\", tokenJson.Permisos);\n    localStorage.setItem(\"Exp\", tokenJson.exp);\n  }\n\n  //Función que borra la información del usuario del almacenamiento local\n  cerrarSesion(): void {\n    localStorage.removeItem(\"Ent3-token\");\n    localStorage.removeItem(\"Nombre\");\n    localStorage.removeItem(\"Correo\");\n    localStorage.removeItem(\"Id\");\n    localStorage.removeItem(\"Permisos\");\n    localStorage.removeItem(\"Exp\");\n  }\n\n  //Función que comprueba si el usuario es administrador\n  esAdmin(): boolean {\n    return localStorage.getItem(\"Permisos\") != null && localStorage.getItem(\"Permisos\") == \"admin\";\n  }\n\n  //Función que comprueba si el token no ha expirado\n  sesionValida(): boolean {\n    return +localStorage.getItem(\"Exp\") * 1000 > new Date().getTime(); //El signo + convierte de string a number\n    // Se multiplica por 1000 para pasar de segundos a milisegundos\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LogService } from './log.service';\nimport { map } from 'rxjs/operators';\nimport { Usuario } from '../interfaces/usuario.interface';\nimport { BehaviorSubject } from '../../../node_modules/rxjs';\n\n@Injectable()\nexport class UsuariosService {\n\n  apptime: string = \"https://apitfm.azurewebsites.net/api/Entidad3/\";\n  usuarios: Usuario[];\n  editObservable:BehaviorSubject<boolean>; \n  passObservable:BehaviorSubject<boolean>;\n\n  constructor(private http: HttpClient, private logServ: LogService) {\n    this.editObservable = new BehaviorSubject<boolean>(null);\n    this.passObservable = new BehaviorSubject<boolean>(null);\n  }\n\n  editarDatos(datos: any, method: string): any {\n    let body = JSON.stringify(datos);\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': \"Bearer \" + localStorage.getItem(\"Ent3-token\"),\n      'Access-Control-Allow-Origin': '*'\n    });\n    let url = `${this.apptime}${method}`;\n    return this.http.post(url, body, { headers, observe: 'response' }).pipe(\n      map(resp => {\n        console.log(resp);\n        return resp;\n      }))\n  }\n\n  eliminarUsuario(id: any): any {\n    let datos = {\n      Id: +id\n    }\n\n    console.log(datos);\n\n    let body = JSON.stringify(datos);\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': \"Bearer \" + localStorage.getItem(\"Ent3-token\")\n    });\n    let url = `${this.apptime}Del`;\n    \n    return this.http.post(url, body, { headers, observe: 'response'}).pipe(\n      map(resp => {\n        console.log(resp);\n        return resp;\n      })\n    )\n  }\n\n  cambiarPass(datos: any, method: string): any {\n    let body = JSON.stringify(datos);\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem(\"Ent3-token\")}`,\n      'Access-Control-Allow-Origin': '*'\n    });\n    let url = `${this.apptime}${method}`;\n    return this.http.post(url, body, { headers, observe: 'response' }).pipe(\n      map(resp => {\n        console.log(resp);\n        return resp;\n      }))\n  }\n\n  obtenerUsuarios(): any {\n    let headers = new HttpHeaders({\n      'Authorization': `Bearer ${localStorage.getItem(\"Ent3-token\")}`\n    });\n    let url = `${this.apptime}GetAll`;\n    return this.http.get(url, { headers, observe: 'response' }).pipe(\n      map(resp => {\n        console.log(resp);\n        if (resp.ok) {\n          return resp.body;\n        } \n      })\n    )\n  }\n\n  buscarUsuario(texto: String): any {\n    let headers = new HttpHeaders({\n      'Authorization': `Bearer ${localStorage.getItem(\"Ent3-token\")}`\n    });\n    let url = `${this.apptime}Name/${texto}`;\n    return this.http.get(url, { headers, observe: 'response'}).pipe(\n      map(resp => {\n        console.log(resp);\n        if(resp.ok){\n          return resp.body;\n        }\n      })\n    )\n  }\n\n  buscarUsuarioId(id: String): any {\n    let headers = new HttpHeaders({\n      'Authorization': `Bearer ${localStorage.getItem(\"Ent3-token\")}`\n    });\n    let url = `${this.apptime}Get/${id}`;\n    return this.http.get(url, { headers, observe : 'response'}).pipe(\n      map(resp => {\n        console.log(resp);\n        if(resp.ok){\n          return resp.body;\n        }\n      })\n    )\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}